From ff4593929d91f559e5855f92f741822785111a08 Mon Sep 17 00:00:00 2001
From: Mario Limonciello <mario.limonciello@amd.com>
Date: Sat, 7 Jun 2025 10:43:29 -0500
Subject: [PATCH] asus-hid: Convert to hidraw

This will help prevent detaching any kernel driver in use causing
an input-blip.
---
 plugins/asus-hid/asus-hid.quirk             |  12 +-
 plugins/asus-hid/fu-asus-hid-child-device.c |  32 ++-
 plugins/asus-hid/fu-asus-hid-device.c       |  67 +++---
 plugins/asus-hid/fu-asus-hid-device.h       |   2 +-
 plugins/asus-hid/fu-asus-hid-plugin.c       |   1 +
 plugins/asus-hid/tests/asus-hid-setup.json  | 247 +++++++++++---------
 plugins/asus-hid/tests/asus-hid.json        |  11 +-
 7 files changed, 210 insertions(+), 162 deletions(-)

diff --git a/plugins/asus-hid/asus-hid.quirk b/plugins/asus-hid/asus-hid.quirk
index 7d8f45355..d95b98c67 100644
--- a/plugins/asus-hid/asus-hid.quirk
+++ b/plugins/asus-hid/asus-hid.quirk
@@ -1,28 +1,28 @@
 # N-Key for Rog Ally
-[USB\VID_0B05&PID_1ABE]
+[HIDRAW\VEN_0B05&DEV_1ABE]
 Plugin = asus_hid
 AsusHidNumMcu = 2
-CounterpartGuid = USB\VID_048D&PID_89DB
+CounterpartGuid = HIDRAW\VEN_048D&DEV_89DB
 FirmwareSizeMax = 0x40000
 Flags = use-runtime-version
 
 # Rog Ally-X
-[USB\VID_0B05&PID_1B4C]
+[HIDRAW\VEN_0B05&DEV_1B4C]
 Plugin = asus_hid
 AsusHidNumMcu = 1
-CounterpartGuid = USB\VID_048D&PID_89DC
+CounterpartGuid = HIDRAW\VEN_048D&DEV_89DC
 FirmwareSizeMax = 0x40000
 Flags = use-runtime-version
 
 # Ally Bootloader
-[USB\VID_048D&PID_89DB]
+[HIDRAW\VEN_048D&DEV_89DB]
 AsusHidNumMcu = 2
 Plugin = asus_hid
 Flags = is-bootloader,can-verify-image
 FirmwareSizeMax = 0x40000
 
 # Ally X Bootloader
-[USB\VID_048D&PID_89DC]
+[HIDRAW\VEN_048D&DEV_89DC]
 AsusHidNumMcu = 1
 Plugin = asus_hid
 Flags = is-bootloader,can-verify-image
diff --git a/plugins/asus-hid/fu-asus-hid-child-device.c b/plugins/asus-hid/fu-asus-hid-child-device.c
index eb89c23f2..695d08cec 100644
--- a/plugins/asus-hid/fu-asus-hid-child-device.c
+++ b/plugins/asus-hid/fu-asus-hid-child-device.c
@@ -34,28 +34,24 @@ fu_asus_hid_child_device_transfer_feature(FuAsusHidChildDevice *self,
 					  guint8 report,
 					  GError **error)
 {
-	FuHidDevice *hid_dev = FU_HID_DEVICE(fu_device_get_proxy(FU_DEVICE(self)));
+	FuHidrawDevice *hid_dev = FU_HIDRAW_DEVICE(fu_device_get_proxy(FU_DEVICE(self)));
 
 	if (req != NULL) {
-		if (!fu_hid_device_set_report(hid_dev,
-					      report,
-					      req->data,
-					      req->len,
-					      FU_ASUS_HID_CHILD_DEVICE_TIMEOUT,
-					      FU_HID_DEVICE_FLAG_IS_FEATURE,
-					      error)) {
+		if (!fu_hidraw_device_set_feature(hid_dev,
+						  req->data,
+						  req->len,
+						  FU_IOCTL_FLAG_NONE,
+						  error)) {
 			g_prefix_error(error, "failed to send packet: ");
 			return FALSE;
 		}
 	}
 	if (res != NULL) {
-		if (!fu_hid_device_get_report(hid_dev,
-					      report,
-					      res->data,
-					      res->len,
-					      FU_ASUS_HID_CHILD_DEVICE_TIMEOUT,
-					      FU_HID_DEVICE_FLAG_IS_FEATURE,
-					      error)) {
+		if (!fu_hidraw_device_get_feature(hid_dev,
+						  res->data,
+						  res->len,
+						  FU_IOCTL_FLAG_NONE,
+						  error)) {
 			g_prefix_error(error, "failed to receive packet: ");
 			return FALSE;
 		}
@@ -129,9 +125,9 @@ fu_asus_hid_child_device_ensure_version(FuAsusHidChildDevice *self, GError **err
 		fu_device_add_instance_strsafe(FU_DEVICE(self), "PART", product);
 		fu_device_build_instance_id(FU_DEVICE(self),
 					    NULL,
-					    "USB",
-					    "VID",
-					    "PID",
+					    "HIDRAW",
+					    "VEN",
+					    "DEV",
 					    "PART",
 					    NULL);
 
diff --git a/plugins/asus-hid/fu-asus-hid-device.c b/plugins/asus-hid/fu-asus-hid-device.c
index 36615f47c..efb7b7a2b 100644
--- a/plugins/asus-hid/fu-asus-hid-device.c
+++ b/plugins/asus-hid/fu-asus-hid-device.c
@@ -11,12 +11,12 @@
 #include "fu-asus-hid-struct.h"
 
 struct _FuAsusHidDevice {
-	FuHidDevice parent_instance;
+	FuHidrawDevice parent_instance;
 	guint8 num_mcu;
 	gulong child_added_id;
 };
 
-G_DEFINE_TYPE(FuAsusHidDevice, fu_asus_hid_device, FU_TYPE_HID_DEVICE)
+G_DEFINE_TYPE(FuAsusHidDevice, fu_asus_hid_device, FU_TYPE_HIDRAW_DEVICE)
 
 #define FU_ASUS_HID_DEVICE_TIMEOUT 200 /* ms */
 
@@ -27,28 +27,22 @@ fu_asus_hid_device_transfer_feature(FuAsusHidDevice *self,
 				    guint8 report,
 				    GError **error)
 {
-	FuHidDevice *hid_dev = FU_HID_DEVICE(self);
-
 	if (req != NULL) {
-		if (!fu_hid_device_set_report(hid_dev,
-					      report,
-					      req->data,
-					      req->len,
-					      FU_ASUS_HID_DEVICE_TIMEOUT,
-					      FU_HID_DEVICE_FLAG_IS_FEATURE,
-					      error)) {
+		if (!fu_hidraw_device_set_feature(FU_HIDRAW_DEVICE(self),
+						  req->data,
+						  req->len,
+						  FU_IOCTL_FLAG_NONE,
+						  error)) {
 			g_prefix_error(error, "failed to send packet: ");
 			return FALSE;
 		}
 	}
 	if (res != NULL) {
-		if (!fu_hid_device_get_report(hid_dev,
-					      report,
-					      res->data,
-					      res->len,
-					      FU_ASUS_HID_DEVICE_TIMEOUT,
-					      FU_HID_DEVICE_FLAG_IS_FEATURE,
-					      error)) {
+		if (!fu_hidraw_device_get_feature(FU_HIDRAW_DEVICE(self),
+						  res->data,
+						  res->len,
+						  FU_IOCTL_FLAG_NONE,
+						  error)) {
 			g_prefix_error(error, "failed to receive packet: ");
 			return FALSE;
 		}
@@ -85,20 +79,42 @@ fu_asus_hid_device_child_added_cb(FuDevice *device, FuDevice *child, gpointer us
 	fu_device_set_proxy(child, device);
 }
 
+static gboolean
+fu_asus_hid_device_validate_descriptor(FuDevice *device, GError **error)
+{
+	g_autoptr(FuHidDescriptor) descriptor = NULL;
+	g_autoptr(FuHidReport) report = NULL;
+
+	descriptor = fu_hidraw_device_parse_descriptor(FU_HIDRAW_DEVICE(device), error);
+	if (descriptor == NULL)
+		return FALSE;
+	report = fu_hid_descriptor_find_report(descriptor,
+					       error,
+					       "usage-page",
+					       0xFF31,
+					       "usage",
+					       0x76,
+					       "collection",
+					       0x01,
+					       NULL);
+	if (report == NULL)
+		return FALSE;
+
+	/* success */
+	return TRUE;
+}
+
 static gboolean
 fu_asus_hid_device_probe(FuDevice *device, GError **error)
 {
 	FuAsusHidDevice *self = FU_ASUS_HID_DEVICE(device);
 
-	fu_hid_device_set_interface(FU_HID_DEVICE(device), 0);
-
 	for (guint i = 0; i < self->num_mcu; i++) {
 		g_autoptr(FuDevice) dev_tmp = fu_asus_hid_child_device_new(device, i);
 		fu_device_add_child(device, dev_tmp);
 	}
 
-	/* FuHidDevice->probe */
-	return FU_DEVICE_CLASS(fu_asus_hid_device_parent_class)->probe(device, error);
+	return TRUE;
 }
 
 static gboolean
@@ -106,14 +122,13 @@ fu_asus_hid_device_setup(FuDevice *device, GError **error)
 {
 	FuAsusHidDevice *self = FU_ASUS_HID_DEVICE(device);
 
-	/* HidDevice->setup */
-	if (!FU_DEVICE_CLASS(fu_asus_hid_device_parent_class)->setup(device, error))
-		return FALSE;
-
 	/* bootloader mode won't know about children */
 	if (fu_device_has_flag(device, FWUPD_DEVICE_FLAG_IS_BOOTLOADER))
 		return TRUE;
 
+	if (!fu_asus_hid_device_validate_descriptor(device, error))
+		return FALSE;
+
 	if (!fu_asus_hid_device_init_seq(self, error))
 		return FALSE;
 
diff --git a/plugins/asus-hid/fu-asus-hid-device.h b/plugins/asus-hid/fu-asus-hid-device.h
index 220110c58..e036b974b 100644
--- a/plugins/asus-hid/fu-asus-hid-device.h
+++ b/plugins/asus-hid/fu-asus-hid-device.h
@@ -9,7 +9,7 @@
 #include <fwupdplugin.h>
 
 #define FU_TYPE_ASUS_HID_DEVICE (fu_asus_hid_device_get_type())
-G_DECLARE_FINAL_TYPE(FuAsusHidDevice, fu_asus_hid_device, FU, ASUS_HID_DEVICE, FuHidDevice)
+G_DECLARE_FINAL_TYPE(FuAsusHidDevice, fu_asus_hid_device, FU, ASUS_HID_DEVICE, FuHidrawDevice)
 
 gboolean
 fu_asus_hid_device_write_firmware(FuDevice *device,
diff --git a/plugins/asus-hid/fu-asus-hid-plugin.c b/plugins/asus-hid/fu-asus-hid-plugin.c
index e9d4deb04..08bc79f67 100644
--- a/plugins/asus-hid/fu-asus-hid-plugin.c
+++ b/plugins/asus-hid/fu-asus-hid-plugin.c
@@ -30,6 +30,7 @@ fu_asus_hid_plugin_constructed(GObject *obj)
 	fu_plugin_set_device_gtype_default(plugin, FU_TYPE_ASUS_HID_DEVICE);
 	fu_context_add_quirk_key(ctx, "AsusHidNumMcu");
 	fu_plugin_add_firmware_gtype(plugin, NULL, FU_TYPE_ASUS_HID_FIRMWARE);
+	fu_plugin_add_udev_subsystem(plugin, "hidraw");
 }
 
 static void
diff --git a/plugins/asus-hid/tests/asus-hid-setup.json b/plugins/asus-hid/tests/asus-hid-setup.json
index 60603f646..d0096589f 100644
--- a/plugins/asus-hid/tests/asus-hid-setup.json
+++ b/plugins/asus-hid/tests/asus-hid-setup.json
@@ -1,163 +1,200 @@
 {
+  "FwupdVersion": "2.0.12",
   "UsbDevices": [
     {
-      "GType": "FuUsbDevice",
-      "PlatformId": "1-3",
-      "Created": "2024-10-07T02:18:32.385431Z",
-      "IdVendor": 2821,
-      "IdProduct": 6846,
-      "Device": 2,
-      "USB": 512,
-      "Manufacturer": 1,
-      "Product": 2,
-      "UsbConfigDescriptors": [
-        {
-          "ConfigurationValue": 1
-        }
-      ],
-      "UsbInterfaces": [
-        {
-          "Length": 9,
-          "DescriptorType": 4,
-          "InterfaceClass": 3,
-          "InterfaceSubClass": 1,
-          "InterfaceProtocol": 1,
-          "Interface": 3,
-          "UsbEndpoints": [
-            {
-              "DescriptorType": 5,
-              "EndpointAddress": 129,
-              "Interval": 1,
-              "MaxPacketSize": 64
-            }
-          ]
-        },
-        {
-          "Length": 9,
-          "DescriptorType": 4,
-          "InterfaceNumber": 1,
-          "InterfaceClass": 3,
-          "InterfaceSubClass": 1,
-          "InterfaceProtocol": 1,
-          "Interface": 1,
-          "UsbEndpoints": [
-            {
-              "DescriptorType": 5,
-              "EndpointAddress": 130,
-              "Interval": 4,
-              "MaxPacketSize": 64
-            }
-          ]
-        },
-        {
-          "Length": 9,
-          "DescriptorType": 4,
-          "InterfaceNumber": 2,
-          "InterfaceClass": 3,
-          "InterfaceSubClass": 1,
-          "InterfaceProtocol": 1,
-          "Interface": 1,
-          "UsbEndpoints": [
-            {
-              "DescriptorType": 5,
-              "EndpointAddress": 131,
-              "Interval": 1,
-              "MaxPacketSize": 64
-            },
-            {
-              "DescriptorType": 5,
-              "EndpointAddress": 4,
-              "Interval": 1,
-              "MaxPacketSize": 64
-            }
-          ]
-        }
-      ],
-      "UsbEvents": [
+      "Created": "2025-06-08T02:44:08.862175Z",
+      "GType": "FuUdevDevice",
+      "BackendId": "/sys/devices/pci0000:00/0000:00:08.1/0000:09:00.3/usb1/1-3/1-3:1.2/0003:0B05:1ABE.0003/hidraw/hidraw2",
+      "DeviceFile": "/dev/hidraw2",
+      "Subsystem": "hidraw",
+      "Vendor": 2821,
+      "Model": 6846,
+      "Events": [
+        {
+          "Id": "GetSymlinkTarget:Attr=subsystem",
+          "Data": "hidraw"
+        },
+        {
+          "Id": "GetSymlinkTarget:Attr=driver"
+        },
+        {
+          "Id": "ReadProp:Key=DEVTYPE"
+        },
+        {
+          "Id": "ReadAttr:Attr=uevent",
+          "Data": "MAJOR=244\nMINOR=2\nDEVNAME=hidraw2"
+        },
+        {
+          "Id": "ReadProp:Key=DEVNAME",
+          "Data": "hidraw2"
+        },
+        {
+          "Id": "ReadAttr:Attr=vendor"
+        },
+        {
+          "Id": "ReadAttr:Attr=device"
+        },
+        {
+          "Id": "ReadAttr:Attr=class"
+        },
+        {
+          "Id": "ReadProp:Key=DEVTYPE"
+        },
+        {
+          "Id": "GetBackendParent:Subsystem=hid",
+          "GType": "FuUdevDevice",
+          "BackendId": "/sys/devices/pci0000:00/0000:00:08.1/0000:09:00.3/usb1/1-3/1-3:1.2/0003:0B05:1ABE.0003"
+        },
+        {
+          "Id": "GetSymlinkTarget:Attr=subsystem",
+          "Data": "hid"
+        },
+        {
+          "Id": "GetSymlinkTarget:Attr=driver",
+          "Data": "asus_rog_ally"
+        },
+        {
+          "Id": "ReadProp:Key=DEVTYPE"
+        },
+        {
+          "Id": "ReadAttr:Attr=uevent",
+          "Data": "DRIVER=asus_rog_ally\nHID_ID=0003:00000B05:00001ABE\nHID_NAME=ASUSTeK Computer Inc. N-KEY Device\nHID_PHYS=usb-0000:09:00.3-3/input2\nHID_UNIQ=\nMODALIAS=hid:b0003g0001v00000B05p00001ABE"
+        },
+        {
+          "Id": "ReadProp:Key=DEVNAME"
+        },
+        {
+          "Id": "ReadAttr:Attr=vendor"
+        },
+        {
+          "Id": "ReadAttr:Attr=device"
+        },
+        {
+          "Id": "ReadAttr:Attr=class"
+        },
+        {
+          "Id": "ReadProp:Key=DEVTYPE"
+        },
+        {
+          "Id": "ReadProp:Key=HID_ID",
+          "Data": "0003:00000B05:00001ABE"
+        },
+        {
+          "Id": "ReadProp:Key=HID_NAME",
+          "Data": "ASUSTeK Computer Inc. N-KEY Device"
+        },
         {
-          "Id": "#d5a801ad",
+          "Id": "ReadProp:Key=HID_UNIQ",
+          "Data": ""
+        },
+        {
+          "Id": "ReadProp:Key=HID_PHYS",
+          "Data": "usb-0000:09:00.3-3/input2"
+        },
+        {
+          "Id": "GetBackendParent:Subsystem=usb:usb_device",
+          "GType": "FuUsbDevice",
+          "BackendId": "/sys/devices/pci0000:00/0000:00:08.1/0000:09:00.3/usb1/1-3",
+          "PhysicalId": "1-3"
+        },
+        {
+          "Id": "GetSymlinkTarget:Attr=subsystem",
           "Data": "usb"
         },
         {
-          "Id": "#ad8c58d3",
+          "Id": "GetSymlinkTarget:Attr=driver",
           "Data": "usb"
         },
         {
-          "Id": "#1075ed5c",
+          "Id": "ReadProp:Key=DEVTYPE",
           "Data": "usb_device"
         },
         {
-          "Id": "#bddbca22",
+          "Id": "ReadAttr:Attr=uevent",
           "Data": "MAJOR=189\nMINOR=2\nDEVNAME=bus/usb/001/003\nDEVTYPE=usb_device\nDRIVER=usb\nPRODUCT=b05/1abe/2\nTYPE=0/0/0\nBUSNUM=001\nDEVNUM=003"
         },
         {
-          "Id": "#d432c663",
+          "Id": "ReadProp:Key=DEVNAME",
           "Data": "bus/usb/001/003"
         },
         {
-          "Id": "#9b895db2"
+          "Id": "ReadAttr:Attr=vendor"
         },
         {
-          "Id": "#66f3e150"
+          "Id": "ReadAttr:Attr=device"
         },
         {
-          "Id": "#d410b6c7"
+          "Id": "ReadAttr:Attr=class"
         },
         {
-          "Id": "#1075ed5c",
+          "Id": "ReadProp:Key=DEVTYPE",
           "Data": "usb_device"
         },
         {
-          "Id": "#4693935e",
+          "Id": "ReadProp:Key=BUSNUM",
           "Data": "001"
         },
         {
-          "Id": "#bddbca22",
+          "Id": "ReadAttr:Attr=uevent",
           "Data": "MAJOR=189\nMINOR=2\nDEVNAME=bus/usb/001/003\nDEVTYPE=usb_device\nDRIVER=usb\nPRODUCT=b05/1abe/2\nTYPE=0/0/0\nBUSNUM=001\nDEVNUM=003"
         },
         {
-          "Id": "#1ab3ae0a",
+          "Id": "ReadProp:Key=DEVNUM",
           "Data": "003"
         },
         {
-          "Id": "#1fcf122d",
-          "Data": "Ti1LRVkgRGV2aWNlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="
+          "Id": "LoadDescriptor:basename=descriptors",
+          "Data": "EgEAAgAAAEAFC74aAgABAgABCQJbAAMBAOAyCQQAAAEDAQEDCSEQAQABIlMABwWBA0AAAQkEAQABAwEBAQkhEAEAASIwAAcFggNAAAQJBAIAAgMBAQEJIRABAAEipwAHBYMDQAABBwUEA0AAAQ=="
+        },
+        {
+          "Id": "LoadDescriptor:basename=bos_descriptors"
+        },
+        {
+          "Id": "ReadProp:Key=HID_FIRMWARE_VERSION"
+        },
+        {
+          "Id": "Ioctl:Request=0x80044801,Data=AAAAAA==,Length=0x4",
+          "DataOut": "pwAAAA=="
+        },
+        {
+          "Id": "Ioctl:Request=0x90044802,Data=pwength=0x1004",
+          "DataOut": "pwAAAAYx/wl2oQGFWhkAKv8AFQAm/wB1CJUFgQAZACr/ABUAJv8AdQiVP7EAwAUMCQGhAYUCGQAqPAIVACY8AnUQlQKBAMAGMf8JeaEBhV0ZACr/ABUAJv8AdQiVH4EAGQAq/wAVACb/AHUIlT+RABkAKv8AFQAm/wB1CJU/sQDABjH/CYChAYVeGQAq/wAVACb/AHUIlQWBABkAKv8AFQAm/wB1CJU/s
         },
         {
-          "Id": "#16f4e7da",
-          "Data": "WtEBAQEA"
+          "Id": "Ioctl:Request=0xc0064806,Data=WtEBAQEA,Length=0x6",
+          "DataOut": "WtEBAQEA"
         },
         {
-          "Id": "#a3bf98cf",
-          "Data": "WkFTVVNUZWNoLkluYy4AAA=="
+          "Id": "Ioctl:Request=0xc0104806,Data=WkFTVVNUZWNoLkluYy4AAA==,Length=0x10",
+          "DataOut": "WkFTVVNUZWNoLkluYy4AAA=="
         },
         {
-          "Id": "#ff7d0ded",
-          "Data": "WkFTVVNUZWNoLkluYy4AAGUAdgBpAGMAZQAAAAAAAAA="
+          "Id": "Ioctl:Request=0xc0204807,Data=WgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=,Length=0x20",
+          "DataOut": "WkFTVVNUZWNoLkluYy4AAFJDNzFMTS4zMTkAAgAYAAA="
         },
         {
-          "Id": "#66f65422",
-          "Data": "WgUDMQAg"
+          "Id": "Ioctl:Request=0xc0064806,Data=WgUDMQAg,Length=0x6",
+          "DataOut": "WgUDMQAg"
         },
         {
-          "Id": "#ff7d0ded",
-          "Data": "WgUDMQAaE0ZHQTgwMTAwLlJDNzFMUy4zMTEAAAAAAAA="
+          "Id": "Ioctl:Request=0xc0204807,Data=WgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=,Length=0x20",
+          "DataOut": "WgUDMQAaE0ZHQTgwMTAwLlJDNzFMUy4zMTkAAgAYAAA="
         },
         {
-          "Id": "#a3bf98cf",
-          "Data": "WkFTVVNUZWNoLkluYy4AAA=="
+          "Id": "Ioctl:Request=0xc0104806,Data=WkFTVVNUZWNoLkluYy4AAA==,Length=0x10",
+          "DataOut": "WkFTVVNUZWNoLkluYy4AAA=="
         },
         {
-          "Id": "#ff7d0ded",
-          "Data": "WkFTVVNUZWNoLkluYy4AAFJDNzFMUy4zMTEAAAAAAAA="
+          "Id": "Ioctl:Request=0xc0204807,Data=WgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=,Length=0x20",
+          "DataOut": "WkFTVVNUZWNoLkluYy4AAFJDNzFMUy4zMTkAAgAYAAA="
         },
         {
-          "Id": "#2fa92714",
-          "Data": "WgUEMQAg"
+          "Id": "Ioctl:Request=0xc0064806,Data=WgUEMQAg,Length=0x6",
+          "DataOut": "WgUEMQAg"
         },
         {
-          "Id": "#ff7d0ded",
-          "Data": "WgUEMQAaE0ZHQTgwMTAwLlJDNzFMTS4zMTEAAAAAAAA="
+          "Id": "Ioctl:Request=0xc0204807,Data=WgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=,Length=0x20",
+          "DataOut": "WgUEMQAaE0ZHQTgwMTAwLlJDNzFMTS4zMTkAAgAYAAA="
         }
       ]
     }
diff --git a/plugins/asus-hid/tests/asus-hid.json b/plugins/asus-hid/tests/asus-hid.json
index 24383b27a..b0854f8a7 100644
--- a/plugins/asus-hid/tests/asus-hid.json
+++ b/plugins/asus-hid/tests/asus-hid.json
@@ -6,21 +6,20 @@
       "emulation-file": "@enumeration_datadir@/asus-hid-setup.json",
       "components": [
         {
-          "version": "0.2",
           "guids": [
-            "40e5a299-fe27-5e3b-a4a3-6649aeef4875"
+            "45b53fed-74ce-542f-aaca-9ba6783c89be"
           ]
         },
         {
-          "version": "311",
+          "version": "319",
           "guids": [
-            "f7765461-3ff4-52a0-a4d8-d782b1f885ab"
+            "ae89f87e-0e1a-563c-afd2-f300c04676aa"
           ]
         },
         {
-          "version": "311",
+          "version": "319",
           "guids": [
-            "545ddbd6-f041-5d86-bfd7-4764193e0a17"
+            "6b00f0ca-abb2-5cc4-bb85-b7392998d51e"
           ]
         }
       ]
-- 
2.43.0

